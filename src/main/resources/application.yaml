
app:
  baseUrl: http://localhost:8080/api/v2
  cmf:
    version: 0.8
    uri: https://docs.oasis-open.org/niemopen/ns/specification/cmf/0.8/
  cmftool:
    version: 0.7-alpha.6
  draft: ${project.ext.draft?:PENDING_BUILD}

logging:
  level:
    gov.niem.tools: DEBUG
    org.hibernate: INFO
    org.springframework.core.LocalVariableTableParameterNameDiscoverer: ERROR
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    web: DEBUG
  file:
    path: logs

# Spring boot actuator settings
management:
  endpoint:
    health:
      group:
        custom:
          show-components: always
          show-details: always
  endpoints:
    web:
      exposure:
        include: metrics, info, health
#   # info:
#   #   env:
#   #     enabled: true
#   # server:
#   #   port: 8085

server:
  compression:
    enabled: true
    mime-types:
    - application/xml
    - application/json
    min-response-size: 1024
  error:
    include-message: always
  servlet:
    context-path: /api/v2

spring:
  config:
    import: secrets.yaml

  datasource:
    driver-class-name: org.postgresql.Driver
    # url: jdbc:postgresql://niem-mep-api-db-1:5432/niem-api-v2
    # url: jdbc:postgresql://niem-api-db-1:5432/niem-api-v2
    # url: jdbc:postgresql://niem-api-db_1:5432/niem-api-v2
    url: jdbc:postgresql://localhost:5432/niem-api-v2-2

  jackson:
    # default-property-inclusion: non-null
    serialization:
      # wrap-root-value: true
      indent-output: true
    # mapper:
    #   write-xml-declaration: true

  jpa:
    defer-datasource-initialization: true
    generate-ddl: true
    hibernate:
      # ddl-auto: update
      # ddl-auto: create-drop
      # ddl-auto: create
      ddl-auto: none
    # open-in-view: false
    properties:
      enable_lazy_load_no_trans: true
      format_sql: true
      hbm2ddl:
        import_files: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        naming:
          implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
          physical-strategy: com.vladmihalcea.hibernate.naming.CamelCaseToSnakeCaseNamingStrategy
      hibernate:
        default_schema: public
        dialect: org.hibernate.dialect.PostgreSQLDialect
        search:
          backend:
            analysis:
              configurer: class:gov.niem.tools.api.core.config.AppLuceneAnalysisConfigurer
            directory:
              root: ./db/indexes
              type: local-filesystem
            lucene_version: LATEST
        # transaction:
        #   jta:
        #     platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform
      # jakarta:
      #   persistence:
      #     schema-generation:
      #       create-source: metadata
      #       scripts:
      #         action: create
      #         create-target: schema-public.sql
      show-sql: false

  output:
    ansi:
      enabled: ALWAYS

  sql:
    init:
      mode: always

springdoc:
  api-docs.path: /api-docs
  default-produces-media-type: application/json
  swagger-ui:
    supported-submit-methods:
    - get
    tags-sorter: alpha
    # try-it-out-enabled: false
  use-fqn: true
  writer-with-default-pretty-printer: true
  writer-with-order-by-keys: true
